package espotify.presentacion;

import espotify.DataTypes.DTDatosListaReproduccion;
import espotify.DataTypes.DTGenero;
import espotify.DataTypes.DTTemaSimple;
import espotify.logica.Fabrica;
import espotify.logica.IControlador;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author ms
 */
public class ConsultaListaReproduccion extends javax.swing.JInternalFrame {
    
    private IControlador controlador;
    private String imgLista;

    
    public ConsultaListaReproduccion() {
        initComponents();
        
        Fabrica fb = Fabrica.getInstance();
        controlador = fb.getControlador();
        
        /* Cargo el jList con los Nicknames de los Clientes del Sistema */
        DefaultListModel<String> listaNicknamesClientes = new DefaultListModel<>();
        ArrayList<String> nicknamesClientes = new ArrayList<>(controlador.getNicknamesClientes());

        for (String nickname: nicknamesClientes) {
            listaNicknamesClientes.addElement(nickname);
        }
        jListClientes.setModel(listaNicknamesClientes);
        
        cargarGenerosEnJTree(); // Cargar los generos en el JTree
        
        jLabelListaDeGeneros.setVisible(true);
        jTreeGeneros.setVisible(true);
        jScrollPaneGenero.setVisible(true);
        jLabelGenero.setVisible(true);
        jTextFieldGenero.setVisible(true);
        
        
        jLabelListaDeClientes.setVisible(false);
        jListClientes.setVisible(false);
        JScrollPanelCliente.setVisible(false);
        jLabelCliente.setVisible(false);
        jTextFieldCliente.setVisible(false);
        
    }
    
    private void cargarGenerosEnJTree() {
    
    DefaultMutableTreeNode raiz = new DefaultMutableTreeNode("Generos");
    ArrayList<DTGenero> generos = new ArrayList<>(controlador.getGeneros()); 

    // Mapa para relacionar nombres de generos con sus nodos
    Map<String, DefaultMutableTreeNode> nodosGeneros = new HashMap<>();

    // Primera pasada: Crear nodos para todos los generos y agregarlos al mapa
    for (DTGenero genero : generos) {
        DefaultMutableTreeNode nodoGenero = new DefaultMutableTreeNode(genero.getNombreGenero());
        nodosGeneros.put(genero.getNombreGenero(), nodoGenero);
        
        // Si el genero no tiene padre agregarlo a la raiz
        if (genero.getMiPadre() == null) {
            raiz.add(nodoGenero);
        }
    }

    // Segunda pasada: Establecer relaciones de padre-hijo basadas en el mapa
    for (DTGenero genero : generos) {
        if (genero.getMiPadre() != null) {
            DefaultMutableTreeNode nodoGenero = nodosGeneros.get(genero.getNombreGenero());
            DefaultMutableTreeNode nodoPadre = nodosGeneros.get(genero.getMiPadre().getNombreGenero());

            // Verificar que ambos nodos existan 
            if (nodoPadre != null && nodoGenero != null) {
                nodoPadre.add(nodoGenero);
            }
        }
    }

    // Establecer el modelo del arbol
    jTreeGeneros.setModel(new DefaultTreeModel(raiz));
    }

    private void mostrarTemasEnTabla(List<DTTemaSimple> temas) {
    
    // Definir las columnas de la tabla
    String[] columnas = {"Nombre Tema", "Duración (seg)", "Posición en Álbum", "Nombre del Álbum", "Artista"};

    // Convertir la lista de temas a formato para JTable
    Object[][] datos = new Object[temas.size()][columnas.length];
    for (int i = 0; i < temas.size(); i++) {
        DTTemaSimple tema = temas.get(i);
        datos[i][0] = tema.getNombreTema();
        datos[i][1] = tema.getDuracionSegundos();
        datos[i][2] = tema.getPosicionEnAlbum();
        datos[i][3] = tema.getNombreAlbum();
        datos[i][4] = tema.getNombreCompletoArtista();
    }

    // Crear y configurar el modelo de la tabla
     DefaultTableModel modeloTabla;
     modeloTabla = new DefaultTableModel(datos, columnas) {};
     
    // Asignar el modelo a la JTable y evitar que se edite
    jTableTemas.setModel(modeloTabla);
    jTableTemas.setDefaultEditor(Object.class, null); 
    jTableTemas.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelConsultarPor = new javax.swing.JLabel();
        jComboBoxConsultarPor = new javax.swing.JComboBox<>();
        jLabelListaDeGeneros = new javax.swing.JLabel();
        jLabelListaDeClientes = new javax.swing.JLabel();
        JScrollPanelCliente = new javax.swing.JScrollPane();
        jListClientes = new javax.swing.JList<>();
        jScrollPaneGenero = new javax.swing.JScrollPane();
        jTreeGeneros = new javax.swing.JTree();
        jLabelListasDeReproduccion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListListaDeReproduccion = new javax.swing.JList<>();
        jLabelNombreDeLaLista = new javax.swing.JLabel();
        jLabelGenero = new javax.swing.JLabel();
        jLabelCliente = new javax.swing.JLabel();
        jLabelInformacionDeLosTemas = new javax.swing.JLabel();
        jTextFieldCliente = new javax.swing.JTextField();
        jTextFieldGenero = new javax.swing.JTextField();
        imageLabel = new javax.swing.JLabel();
        jButtonDescargarArchivosDeMusica = new javax.swing.JButton();
        jButtonVerDireccionWeb = new javax.swing.JButton();
        jTextFieldNombreDeLaLista = new javax.swing.JTextField();
        jButtonSeleccionar = new javax.swing.JButton();
        jButtonConsultarLista = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTemas = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Consulta de Lista de Reproduccion");

        jLabelConsultarPor.setText("Consultar por: ");

        jComboBoxConsultarPor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Género", "Cliente" }));
        jComboBoxConsultarPor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxConsultarPorActionPerformed(evt);
            }
        });

        jLabelListaDeGeneros.setText("Lista de Géneros:");

        jLabelListaDeClientes.setText("Lista de Clientes:");

        JScrollPanelCliente.setViewportView(jListClientes);

        jScrollPaneGenero.setViewportView(jTreeGeneros);

        jLabelListasDeReproduccion.setText("Listas de Reproducción:");

        jScrollPane1.setViewportView(jListListaDeReproduccion);

        jLabelNombreDeLaLista.setText("Nombre de la Lista:");

        jLabelGenero.setText("Género:");

        jLabelCliente.setText("Cliente:");

        jLabelInformacionDeLosTemas.setText("Información de los temas:");

        jTextFieldCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldClienteActionPerformed(evt);
            }
        });

        jTextFieldGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGeneroActionPerformed(evt);
            }
        });

        imageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonDescargarArchivosDeMusica.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jButtonDescargarArchivosDeMusica.setText("Descargar Archivo de Música");
        jButtonDescargarArchivosDeMusica.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonVerDireccionWeb.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jButtonVerDireccionWeb.setText("Ver Dirección Web");
        jButtonVerDireccionWeb.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonVerDireccionWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerDireccionWebActionPerformed(evt);
            }
        });

        jButtonSeleccionar.setText("Seleccionar");
        jButtonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionarActionPerformed(evt);
            }
        });

        jButtonConsultarLista.setText("Consultar Lista");
        jButtonConsultarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarListaActionPerformed(evt);
            }
        });

        jTableTemas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableTemas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelConsultarPor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxConsultarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelListaDeGeneros)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelListaDeClientes))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPaneGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JScrollPanelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jButtonSeleccionar)))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelListasDeReproduccion)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabelNombreDeLaLista, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jTextFieldNombreDeLaLista, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabelCliente)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jTextFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 62, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabelGenero)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldGenero))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelInformacionDeLosTemas)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButtonDescargarArchivosDeMusica)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButtonVerDireccionWeb)))
                                        .addGap(182, 182, 182))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButtonConsultarLista)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelConsultarPor)
                    .addComponent(jComboBoxConsultarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelNombreDeLaLista)
                                    .addComponent(jTextFieldNombreDeLaLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelGenero))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCliente)
                                    .addComponent(jTextFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(15, 15, 15)
                        .addComponent(jLabelInformacionDeLosTemas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelListaDeGeneros)
                            .addComponent(jLabelListaDeClientes)
                            .addComponent(jLabelListasDeReproduccion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JScrollPanelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSeleccionar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonConsultarLista)
                                    .addComponent(jButtonDescargarArchivosDeMusica)
                                    .addComponent(jButtonVerDireccionWeb))))))
                .addContainerGap(333, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxConsultarPorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxConsultarPorActionPerformed
        
        String opcion=(String)jComboBoxConsultarPor.getSelectedItem();
        if("Género".equals(opcion)){
            
            jTextFieldNombreDeLaLista.setText("");
            jTextFieldGenero.setText("");
            jTextFieldCliente.setText("");
            DefaultTableModel modeloTabla = (DefaultTableModel) jTableTemas.getModel();
            modeloTabla.setRowCount(0);
            jListListaDeReproduccion.setModel(new DefaultListModel<>());
            
            jLabelListaDeGeneros.setVisible(true);
            jTreeGeneros.setVisible(true);
            jScrollPaneGenero.setVisible(true);
            jLabelGenero.setVisible(true);
            jTextFieldGenero.setVisible(true);
            
            jLabelListaDeClientes.setVisible(false);
            jListClientes.setVisible(false);
            JScrollPanelCliente.setVisible(false);
            jLabelCliente.setVisible(false);
            jTextFieldCliente.setVisible(false);
            
        }
        else{
            
            jTextFieldNombreDeLaLista.setText("");
            jTextFieldGenero.setText("");
            jTextFieldCliente.setText("");
            DefaultTableModel modeloTabla = (DefaultTableModel) jTableTemas.getModel();
            modeloTabla.setRowCount(0);
            jListListaDeReproduccion.setModel(new DefaultListModel<>());
        
            jLabelListaDeGeneros.setVisible(false);
            jTreeGeneros.setVisible(false);
            jScrollPaneGenero.setVisible(false);
            jLabelGenero.setVisible(false);
            jTextFieldGenero.setVisible(false);
            
            
            jLabelListaDeClientes.setVisible(true);
            jListClientes.setVisible(true);
            JScrollPanelCliente.setVisible(true);
            jLabelCliente.setVisible(true);
            jTextFieldCliente.setVisible(true);
        }
    }//GEN-LAST:event_jComboBoxConsultarPorActionPerformed

    private void jTextFieldGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGeneroActionPerformed

    private void jTextFieldClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldClienteActionPerformed

    private void jButtonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionarActionPerformed
       
      // Limpiar la lista de reproduccion antes de cargar los datos
      DefaultListModel<String> modeloLista = new DefaultListModel<>();
      jListListaDeReproduccion.setModel(modeloLista);

    String opcionSeleccionada = (String) jComboBoxConsultarPor.getSelectedItem();

    if (opcionSeleccionada.equals("Género")) {
        
        // Obtener el genero del JTree
        DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) jTreeGeneros.getLastSelectedPathComponent();
        
        if (nodoSeleccionado != null) {
            String generoSeleccionado = nodoSeleccionado.toString();

            // Obtener los nombres de las listas por defecto para el genero seleccionado 
            List<String> nombresListas = controlador.ConsultarNombresListasPorTipo("Genero", generoSeleccionado);

            if (nombresListas.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontraron listas de reproducción para el género seleccionado.", "--", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Mostrar las listas en el jListListaDeReproduccion
                for (String nombreLista : nombresListas) {
                    modeloLista.addElement(nombreLista);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un género de la lista de generos.", "Error", JOptionPane.WARNING_MESSAGE);
        }
    } else if (opcionSeleccionada.equals("Cliente")) {
        
        // Obtener el cliente del jListClientes
        String clienteSeleccionado = jListClientes.getSelectedValue();
        
        if (clienteSeleccionado != null) {           
            List<String> nombresListas = controlador.ConsultarNombresListasPorTipo("Cliente", clienteSeleccionado);

            if (nombresListas.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontraron listas de reproducción para el cliente seleccionado.", "--", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Mostrar las listas en el jListListaDeReproduccion
                for (String nombreLista : nombresListas) {
                    modeloLista.addElement(nombreLista);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un cliente de la lista de clientes.", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }
      jTextFieldNombreDeLaLista.setText("");
      jTextFieldGenero.setText("");
      jTextFieldCliente.setText("");
      DefaultTableModel modeloTabla = (DefaultTableModel) jTableTemas.getModel();
      modeloTabla.setRowCount(0);     
    }//GEN-LAST:event_jButtonSeleccionarActionPerformed

    private void jButtonConsultarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarListaActionPerformed
        
    // Verificar que hay una lista seleccionada
    String nombreListaSeleccionada = jListListaDeReproduccion.getSelectedValue();
    
    if (nombreListaSeleccionada != null) {
        // Obtener la opcion seleccionada 
        String opcionSeleccionada = jComboBoxConsultarPor.getSelectedItem().toString();

        if (opcionSeleccionada.equals("Género")) {
            // Consultar datos de la lista asociada al genero
            DTDatosListaReproduccion datosLista = controlador.ConsultarListaReproduccion("Genero", nombreListaSeleccionada);
            if (datosLista != null) {
                // Mostrar datos de la lista por defecto
                jTextFieldNombreDeLaLista.setText(datosLista.getNombreLista());
                jTextFieldGenero.setText(datosLista.getGenero());
                jTextFieldCliente.setText(""); 

                // Mostrar temas en el JTable
                mostrarTemasEnTabla(datosLista.getTemas());
            } 
        } else if (opcionSeleccionada.equals("Cliente")) {
            // Consultar datos de la lista asociada al cliente
            DTDatosListaReproduccion datosLista = controlador.ConsultarListaReproduccion("Cliente", nombreListaSeleccionada);
            if (datosLista != null) {
                // Mostrar datos de la lista particular
                jTextFieldNombreDeLaLista.setText(datosLista.getNombreLista());
                jTextFieldCliente.setText(datosLista.getCliente());
                jTextFieldGenero.setText(""); // Limpiar campo de género

                // Mostrar temas en el JTable
                mostrarTemasEnTabla(datosLista.getTemas());
            } 
        }
    }
    }//GEN-LAST:event_jButtonConsultarListaActionPerformed

    private void jButtonVerDireccionWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerDireccionWebActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonVerDireccionWebActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPanelCliente;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JButton jButtonConsultarLista;
    private javax.swing.JButton jButtonDescargarArchivosDeMusica;
    private javax.swing.JButton jButtonSeleccionar;
    private javax.swing.JButton jButtonVerDireccionWeb;
    private javax.swing.JComboBox<String> jComboBoxConsultarPor;
    private javax.swing.JLabel jLabelCliente;
    private javax.swing.JLabel jLabelConsultarPor;
    private javax.swing.JLabel jLabelGenero;
    private javax.swing.JLabel jLabelInformacionDeLosTemas;
    private javax.swing.JLabel jLabelListaDeClientes;
    private javax.swing.JLabel jLabelListaDeGeneros;
    private javax.swing.JLabel jLabelListasDeReproduccion;
    private javax.swing.JLabel jLabelNombreDeLaLista;
    private javax.swing.JList<String> jListClientes;
    private javax.swing.JList<String> jListListaDeReproduccion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneGenero;
    private javax.swing.JTable jTableTemas;
    private javax.swing.JTextField jTextFieldCliente;
    private javax.swing.JTextField jTextFieldGenero;
    private javax.swing.JTextField jTextFieldNombreDeLaLista;
    private javax.swing.JTree jTreeGeneros;
    // End of variables declaration//GEN-END:variables
}
