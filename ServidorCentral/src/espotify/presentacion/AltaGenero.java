/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package espotify.presentacion;

import espotify.logica.Fabrica;
import espotify.logica.IControlador;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;



/**
 *
 * @author brisa
 */
public class AltaGenero extends javax.swing.JInternalFrame {
    
    IControlador controlador;
    
    public AltaGenero() {
        initComponents();
        
        Fabrica fb = Fabrica.getInstance();
        controlador = fb.getControlador();
        
        generosPadreComboBox.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        NombreLabel = new javax.swing.JLabel();
        nombreTextField = new javax.swing.JTextField();
        gPadreLabel = new javax.swing.JLabel();
        confirmarBoton = new javax.swing.JButton();
        padreNo = new javax.swing.JRadioButton();
        padreSi = new javax.swing.JRadioButton();
        generosPadreComboBox = new javax.swing.JComboBox<>();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 8), new java.awt.Dimension(0, 8), new java.awt.Dimension(32767, 8));

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Alta Genero");

        NombreLabel.setText("Nombre:");

        nombreTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTextFieldActionPerformed(evt);
            }
        });

        gPadreLabel.setText("Genero Padre:");

        confirmarBoton.setText("Confirmar");
        confirmarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarBotonActionPerformed(evt);
            }
        });

        buttonGroup1.add(padreNo);
        padreNo.setText("No");
        padreNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                padreNoActionPerformed(evt);
            }
        });

        buttonGroup1.add(padreSi);
        padreSi.setText("Si");
        padreSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                padreSiActionPerformed(evt);
            }
        });

        generosPadreComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generosPadreComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NombreLabel)
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(padreSi)
                                    .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(padreNo)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gPadreLabel)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(confirmarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(generosPadreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(NombreLabel))
                            .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generosPadreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(padreSi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(padreNo)
                        .addGap(52, 52, 52)
                        .addComponent(confirmarBoton)
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gPadreLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTextFieldActionPerformed
 
    private void confirmarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarBotonActionPerformed
        
        
        if(controlador.NoHayGeneros()){
            controlador.SetGenero();
        }
        
        String nombreGeneroIngresado = nombreTextField.getText();
        
        

        // NombreIngresado != Empty
        if (!nombreGeneroIngresado.isEmpty()) {
            //el nombre ingresado es genero
            if (!nombreGeneroIngresado.equalsIgnoreCase("genero")) {

                ArrayList<String> generos = new ArrayList<>(controlador.getNombresGenerosPadre());
                generos.addAll(controlador.getNombresGenerosHijos());
                boolean Existe = false;
                // Recorro lista GenerosTotales
                for (String g : generos) {
                    // Si GeneroIngresado == GenerosActual, genero existe
                    if (g.toLowerCase().equals(nombreGeneroIngresado.toLowerCase())) {
                        Existe = true;
                    }
                }
                // Sin GeneroPadre    
                if (padreNo.isSelected()) {
                    // GeneroIngresado no existe
                    if (!Existe) {
                        controlador.AltaGenero(nombreGeneroIngresado, "Genero");
                        JOptionPane.showMessageDialog(
                                null,
                                "Genero creado exitosamente.",
                                "Operacion exitosa",
                                JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        // GeneroPadre ya existe
                        JOptionPane.showMessageDialog(
                                null,
                                "Genero ya existe.",
                                "Error",
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else if (padreSi.isSelected()) { // Con GeneroPadre
                    
                    // GeneroIngresado no existe
                    if (!Existe) {

                        String generoPadreSeleccionado = (String) generosPadreComboBox.getSelectedItem();
                        if (!generoPadreSeleccionado.isEmpty()) {
                            controlador.AltaGenero(nombreGeneroIngresado, generoPadreSeleccionado);
                            JOptionPane.showMessageDialog(
                                    null,
                                    "Genero creado exitosamente.",
                                    "Operacion exitosa",
                                    JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(
                                    null,
                                    "Debe seleccionar un genero padre.",
                                    "Error",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                        // Si GeneroIngresado no existe en GenerosHijos

                    } else {
                        // GeneroSeleccionado == GeneroPadre
                        JOptionPane.showMessageDialog(
                                null,
                                "Genero ya existe.",
                                "Error",
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    // No seleccionó opcion de Padre
                    JOptionPane.showMessageDialog(
                            null,
                            "Seleccione opción de padre SI/NO.",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }else{
                // GeneroSeleccionado == GeneroPadre
                        JOptionPane.showMessageDialog(
                                null,
                                "Ingrese un nombre valido",
                                "Error",
                                JOptionPane.ERROR_MESSAGE);
            }

        } else {
            // No ingresó nombre de Genero
            JOptionPane.showMessageDialog(
                    null,
                    "Ingrese nombre de genero.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_confirmarBotonActionPerformed

    private void generosPadreComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generosPadreComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generosPadreComboBoxActionPerformed

    private void padreSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_padreSiActionPerformed
        generosPadreComboBox.setVisible(true);
        cargarGenerosPadre();
    }//GEN-LAST:event_padreSiActionPerformed

    private void padreNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_padreNoActionPerformed
        // TODO add your handling code here:
        generosPadreComboBox.setVisible(false);
    }//GEN-LAST:event_padreNoActionPerformed

    private void cargarGenerosPadre() {
        DefaultComboBoxModel<String> modeloGenerosPadre = new DefaultComboBoxModel<>();
        ArrayList<String> nombresGenerosPadre = controlador.getNombresGenerosPadre();
        
        for (String nombreGenero : nombresGenerosPadre) {
            modeloGenerosPadre.addElement(nombreGenero);
        }
        
        generosPadreComboBox.setModel(modeloGenerosPadre);
        generosPadreComboBox.setSelectedIndex(0);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NombreLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton confirmarBoton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JLabel gPadreLabel;
    private javax.swing.JComboBox<String> generosPadreComboBox;
    private javax.swing.JTextField nombreTextField;
    private javax.swing.JRadioButton padreNo;
    private javax.swing.JRadioButton padreSi;
    // End of variables declaration//GEN-END:variables
}
